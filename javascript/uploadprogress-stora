proxies.UploadProgress = {url: "webServices/UploadProgress.asmx",ns: "http://tempuri.org/"}
proxies.UploadProgress.GetExtended = function() {
    return (proxies.callSoap(arguments));
}
proxies.UploadProgress.GetExtended.fname = "GetExtended";
proxies.UploadProgress.GetExtended.service = proxies.UploadProgress;
proxies.UploadProgress.GetExtended.action = "http://tempuri.org/GetExtended";
proxies.UploadProgress.GetExtended.params = new Array("uploadID");

var action1 = null, 
wscounter = 1, 
prevPos = 0, 
updateSp = 1;

function validateSendAFile() 
{
    if (document.getElementById('FileUpload').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select a file to send.');
        return false;
    }
    
    if (isDistributionGroup == null || isDistributionGroup == undefined || isDistributionGroup == false) 
    {
        if (document.getElementById('Recipients').value.length == 0) 
        {
            clearProcessingMessages();
            displayMessage('Error', 'You must select a recipient.');
            return false;
        }
        if (!validateMultipleEmailAddresses(document.getElementById('Recipients').value)) 
        {
            clearProcessingMessages();
            //alert('One or more of the e-mail addresses that you entered was invalid. Please check the recipient list and try again.');
            return false;
        }
    } 
    else 
    {
        if (document.getElementById('DistributionGroupList').selectedIndex < 1) 
        {
            clearProcessingMessages();
            displayMessage('Error', 'You must select a distribution group.');
            return false;
        }
    }
    
    if (document.getElementById('Subject') && document.getElementById('Subject').value.length == 0) 
    {
        clearProcessingMessages();
        displayMessage('Error', 'You must provide a subject for this e-mail');
        return false;
    }
    
    startUploadProgress();
    return true;
}

function validateSendAFileAlt() 
{
    if (document.getElementById('FileUpload').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select a file to send.');
        return false;
    }
    startUploadProgress();
    return true;
}

function validateAddMultipleEmployees() 
{
    var fileName = document.getElementById('FileUpload').value
    if (fileName.length < 5 || fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase() != 'xls') 
    {
        clearProcessingMessages(true);
        displayMessage('Upload Error', 'You must select an Excel spreadsheet.');
        return false;
    }
    startUploadProgress();
    return true;
}

function validateImportAddressBook() 
{
    var fileName = document.getElementById('FileUpload').value
    if (fileName.length < 5 || fileName.substring(fileName.lastIndexOf('.') + 1).toLowerCase() != 'pst') 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select a valid .pst file.');
        return false;
    }
    startUploadProgress();
    return true;
}

function validateSendMultipleFiles() 
{
    if (document.getElementById('FileUpload1').value.length < 5 && document.getElementById('FileUpload2').value.length < 5 && document.getElementById('FileUpload3').value.length < 5 && document.getElementById('FileUpload4').value.length < 5 && document.getElementById('FileUpload5').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select at least one file to send.');
        return false;
    }
    
    if (isDistributionGroup == null || isDistributionGroup == undefined || isDistributionGroup == false) 
    {
        if (document.getElementById('Recipients').value.length == 0) 
        {
            clearProcessingMessages();
            displayMessage('Error', 'You must select a recipient.');
            return false;
        }
        if (!validateMultipleEmailAddresses(document.getElementById('Recipients').value)) 
        {
            clearProcessingMessages();
            //alert('One or more of the e-mail addresses that you entered was invalid. Please check the recipient list and try again.');
            return false;
        }
    } 
    else 
    {
        if (document.getElementById('DistributionGroupList').selectedIndex < 1) 
        {
            clearProcessingMessages();
            displayMessage('Error', 'You must select a distribution group.');
            return false;
        }
    }
    
    if (document.getElementById('Subject') && document.getElementById('Subject').value.length == 0) 
    {
        clearProcessingMessages();
        displayMessage('Error', 'You must provide a subject for this e-mail');
        return false;
    }
    
    startUploadProgress();
    return true;
}

function validateSendMultipleFilesWithZip() 
{
    if (document.getElementById('ZipFileUpload').value.length < 5 && document.getElementById('FileUpload1').value.length < 5 && document.getElementById('FileUpload2').value.length < 5 && document.getElementById('FileUpload3').value.length < 5 && document.getElementById('FileUpload4').value.length < 5 && document.getElementById('FileUpload5').value.length < 5) 
    {
        clearProcessingMessages();
        alert('You must select at least one file to send.');
        return false;
    }
    
    if (isDistributionGroup == null || isDistributionGroup == undefined || isDistributionGroup == false) 
    {
        if (document.getElementById('Recipients').value.length == 0) 
        {
            clearProcessingMessages();
            alert('You must select a recipient.');
            return false;
        }
        if (!validateMultipleEmailAddresses(document.getElementById('Recipients').value)) 
        {
            //alert('One or more of the e-mail addresses that you entered was invalid. Please check the recipient list and try again.');
            clearProcessingMessages();
            return false;
        }
    } 
    else 
    {
        if (document.getElementById('DistributionGroupList').selectedIndex < 1) 
        {
            clearProcessingMessages();
            alert('You must select a distribution group.');
            return false;
        }
    }
    
    if (document.getElementById('Subject') && document.getElementById('Subject').value.length == 0) 
    {
        clearProcessingMessages();
        alert('You must provide a subject for this e-mail');
        return false;
    }
    
    startUploadProgress();
    return true;
}

function validateSendMultipleFilesAlt() 
{
    if (document.getElementById('FileUpload1').value.length < 5 && document.getElementById('FileUpload2').value.length < 5 && document.getElementById('FileUpload3').value.length < 5 && document.getElementById('FileUpload4').value.length < 5 && document.getElementById('FileUpload5').value.length < 5) 
    {
        clearProcessingMessages();
        alert('You must select at least one file to send.');
        return false;
    }
    startUploadProgress();
    return true;
}

function validateSendMultipleFilesAltWithZip() 
{
    if (document.getElementById('ZipFileUpload').value.length < 5 && document.getElementById('FileUpload1').value.length < 5 && document.getElementById('FileUpload2').value.length < 5 && document.getElementById('FileUpload3').value.length < 5 && document.getElementById('FileUpload4').value.length < 5 && document.getElementById('FileUpload5').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select at least one file to send.');
        return false;
    }
    startUploadProgress();
    return true;
}

function validateUpload() 
{
    if (document.getElementById('FileUpload').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select a file to send.');
        return false;
    }
    if (document.getElementById('Title').value.length == 0) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select a title.');
        return false;
    }
    if (truncateString(document.getElementById('Title').value).length < document.getElementById('Title').value.length) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'The title is too long.');
        return false;
    }
    startUploadProgress();
    return true;
}

// Post on page is not default. Normally, ajax uploads will try to target an iframe instead of the current document
function validateAddFile(postToSelf) 
{
    var err = null;
    if (document.getElementById('File1').value.length < 5)
        err = 'You must select a file to upload.';
    if (document.getElementById('title').value.length == 0)
        err = 'You must select a title.';
    if (truncateString(document.getElementById('title').value).length < document.getElementById('title').value.length)
        err = 'The title is too long.';
    if (document.getElementById('details').value.length > 1000)
        err = 'Details must be less than 1000 characters in length.';
    if (err != null) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', err, 'errorIcon');
        return false;
    }
    startUploadProgress(postToSelf);
    return true;
}

function validateEditFiles() 
{
    if (document.getElementById('FileUpload').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select a file to upload.');
        return false;
    }
    if (document.getElementById('Title').value.length == 0) 
    {
        clearProcessingMessages();
        displayMessage('Error', 'You must select a title.');
        return false;
    }
    if (truncateString(document.getElementById('Title').value).length < document.getElementById('Title').value.length) 
    {
        clearProcessingMessages();
        displayMessage('Error', 'The title is too long.');
        return false;
    }
    startUploadProgress(true);
    return true;
}

function validateEditFilesNoChange() 
{
    if (document.getElementById('Title').value.length == 0) 
    {
        clearProcessingMessages();
        displayMessage('Error', 'You must select a title.');
        return false;
    }
    if (truncateString(document.getElementById('Title').value).length < document.getElementById('Title').value.length) 
    {
        clearProcessingMessages();
        displayMessage('Error', 'The title is too long.');
        return false;
    }
    return true;
}


function validateAddMultipleFiles() 
{
    var zipfile = document.getElementById('ZipFile').value;
    if (zipfile.length < 5 && document.getElementById('File2').value.length < 5 && document.getElementById('File3').value.length < 5 && document.getElementById('File4').value.length < 5 && document.getElementById('File5').value.length < 5 && document.getElementById('File6').value.length < 5) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select either a zip file or at least one individual file.');
        return false;
    }
    
    if (zipfile.length > 4 && zipfile.substring(zipfile.lastIndexOf('.') + 1).toLowerCase() != 'zip') 
    {
        //Valid the zip format
        clearProcessingMessages();
        displayMessage('Upload Error', 'Invalid zip file. The file must end with a .zip extension.');
        return false;
    } 
    else if (zipfile.length > 4) 
    {
        //Mark the 'unzip' checkbox
        document.getElementById('unzip').checked = true;
    }
    
    startUploadProgress();
    return true;
}

function validateRequestFiles() 
{
    var someFiles = false;
    
    if ((document.getElementById('File2').value.length > 0))
        someFiles = true;
    if ((document.getElementById('File3').value.length > 0))
        someFiles = true;
    if ((document.getElementById('File4').value.length > 0))
        someFiles = true;
    if ((document.getElementById('File5').value.length > 0))
        someFiles = true;
    if ((document.getElementById('File6').value.length > 0))
        someFiles = true;
    
    if (!someFiles) 
    {
        clearProcessingMessages();
        displayMessage('Upload Error', 'You must select at least one file to upload.', 'errorIcon');
        return false;
    }
    
    startUploadProgress();
    return true;
}

// Post on page is not default. Normally, ajax uploads will try to target an iframe instead of the current document
function startUploadProgress(postToSelf) 
{
    if (isSafariLTE4()) 
    {
        document.getElementById('codetohide').style.position = 'absolute';
        document.getElementById('uploadprogress').style.zIndex = 1;
        document.getElementById('uploadprogress').style.display = 'block';
        
        document.getElementById('codetohide').style.left = '-10000%';
    } 
    else 
    {
        if ((checkIt('netscape') && checkIt('mac')) == false)
            document.getElementById('codetohide').style.display = 'none';
        else 
        {
            document.getElementById('uploadprogress').style.height = '400px';
            document.getElementById('uploadprogress').style.zIndex = 100;
            document.getElementById('uploadprogress').style.position = 'relative';
            document.getElementById('uploadprogress').style.top = '-290px';
        }
        document.getElementById('uploadprogress').style.display = 'block';
    }
    //document.getElementById('popup').style.display = 'none';
    
    var useAJAX = !(checkIt('msie') && checkIt('mac')) && !isSafari3();
    
    if (useAJAX) {
        setUploadInProgress(true);
        if (!postToSelf)
            $('#MainForm').attr('target', 'uploadFrame');
        initAction1();
        ajax.Start(action1);
    } 
    else 
    {
        var uploadID = getUploadProgressArgs(true);

        //Pop up window
        $('#progressinfocontainer').remove();
        $('#progressbarcontainer').remove();
        var url = 'uploadprogress.aspx?uploadID=' + uploadID;
        win = openWindow(url, 470, 120, false);
    }

}

function isSafari3() 
{
    return checkIt('safari') && checkIt('version/3.');
}
function isSafariLTE4() 
{
    return checkIt('safari') && (checkIt('version/3.') || checkIt('version/4.'));
}

function initAction1() 
{
    action1 = 
    {
        delay: 200,
        prepare: function() {
            return (getUploadProgressArgs(false));
        },
        call: proxies.UploadProgress.GetExtended,
        finish: function(p) {
            setProgressStatus(p);
        },
        onException: function(ex) {
            setUploadInProgress(false);
            alertException(ex);
        }
    }
}

function setProgressStatus(progressInfo) 
{
    var infoL = document.getElementById('progLeft');
    var infoR = document.getElementById('progRight');
    var infoPerc = document.getElementById('progPercent');
    if (progressInfo.indexOf(',') > -1) 
    {
        var progressArray = progressInfo.split(',');
        var percentComplete = progressArray[0];
        var fileSize = progressArray[1];
        var transferRate = progressArray[2];
        var timeRemaining = progressArray[3];
        var amountComplete = progressArray[4];
        if (timeRemaining != "" && timeRemaining.indexOf('finalizing') == -1)
            timeRemaining += ' remaining';
        //document.getElementById('progressbar').style.width = percentComplete.toString() + '%';
        var animateSp = 1000;
        
        if (infoL && infoR) 
        {
            infoL.innerHTML = amountComplete + ' of ' + fileSize + ' transferred';
            infoR.innerHTML = timeRemaining;
            infoPerc.innerHTML = percentComplete.toString() + '%';
        } 
        else
            document.getElementById('progressinfocontainer').innerHTML = amountComplete + ' of ' + fileSize + ' transferred<br />' + timeRemaining;

        // See if we're done and need to redirect
        if (percentComplete == 100) {
            setUploadInProgress(false);
            if ($('#notify').is(':checked') && notifyURL != null) 
            {
                loadPage(notifyURL);
            } 
            else if (redirectURL != null)
                loadPage(redirectURL);
        } 
        else 
        {
            // It's painfully slow to always wait the full time between updates even if you're uploading
            // a small file. Alternate between checking it fast and slow since we don't want to spam
            // the server, but we want it to feel faster for the clients with quick connections
            var change;
            if (percentComplete != 99 && wscounter > 2 && prevPos != 0) 
            {
                change = (parseFloat(percentComplete) - prevPos) / updateSp;
                
                if (change > 16)
                    updateSp = 1;
                else if (change > 7)
                    updateSp = 2;
                else if (change > 4.5)
                    updateSp = 3;
                else if (change > 2)
                    updateSp = 4;
                else if (change > 1.5)
                    updateSp = 5;
                else if (change > 1)
                    updateSp = 6;
                else if (change > .4)
                    updateSp = 7;
                else if (change <= .4)
                    updateSp = 8;
            } 
            // Check to see if we're finishing an upload
            else if (prevPos == 99) 
            {
                // At most, a minute has elapsed, this is probably a small file, so finalizing should be quick
                if (wscounter < 7) 
                {
                    if (updateSp > 1) {
                        updateSp = 1;
                    } 
                    else {
                        updateSp = 2
                    }
                } 
                // It's been a while and this might be a big file, don't spam the server while finalizing is happening
                else 
                {
                    if (updateSp > 2) {
                        updateSp = 2;
                    } 
                    else {
                        updateSp = 4
                    }
                }
            }

            //console.log('prev:' + prevPos + ' percent:' + percentComplete + ' change:' + change +' sp:' + updateSp + ' counter:' + wscounter);
            prevPos = percentComplete;
            
            if (updateSp > 4) {
                animateSp = 3000;
            } 
            else if (updateSp > 1) {
                animateSp = 1000;
            } 
            else if (updateSp <= 1) {
                animateSp = 500;
            }
            setTimeout('startUploadProgress()', updateSp * 1000);
        }
        $('#progressbar').animate({width: percentComplete.toString() + '%'}, animateSp);
    } 
    else 
    {
        if (progressInfo == "error") {
            setUploadInProgress(false);
            var url = 'error.aspx?type=storagecenter-standardupload&';
            if (cancelURL)
                url = url + '&redirect=' + encodeURIComponent(cancelURL);
            loadPage(url);
        } 
        else 
        {
            //Show a message saying that the progress info is still loading
            document.getElementById('progressbar').style.width = 0;
            if (infoL)
                infoL.innerHTML = 'loading upload progress info';
            else
                document.getElementById('progressinfocontainer').innerHTML = 'loading upload progress info';
            setTimeout('startUploadProgress()', 1000);
        }
    }
    wscounter = wscounter + 1;
}

var uploadInProgress = false;
var navUploadNotice = "Navigating away from the current page will cancel the current upload.";
function toggleUploadInProgress() {
    setUploadInProgress(uploadInProgress ? false : true);
}

function setUploadInProgress(val) {
    uploadInProgress = val;
}

function isUploadInProgress() {
    return uploadInProgress;
}
